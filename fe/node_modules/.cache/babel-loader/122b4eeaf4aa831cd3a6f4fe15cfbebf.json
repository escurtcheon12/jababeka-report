{"ast":null,"code":"var _jsxFileName = \"/home/escurtcheon/Documents/Code/JababekaReport/web/fe/src/pages/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../../assets/css/login.css\";\nimport \"../../assets/css/bootstrap.min.css\";\nimport logo from \"../../assets/logo/jababeka_report.png\";\nimport { onInputChange } from \"../shared/utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { loginUser } from \"../../api/apiAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n  const [formLogin, setFormLogin] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const {\n    status: statusLoginUser,\n    error: errorLoginError,\n    mutate: handleLogin\n  } = useMutation({\n    mutationFn: async () => await loginUser(formLogin.username, formLogin.password),\n    onSuccess: result => {\n      if (Object.values(result === null || result === void 0 ? void 0 : result.data.data).length > 0) {\n        localStorage.setItem(\"data\", JSON.stringify(result.data.data[0]));\n        navigate(\"/\");\n      }\n\n      return queryClient.invalidateQueries([\"comments\"]);\n    }\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await handleLogin();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square_login\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line_logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img_logo_login mt-5 mb-3\",\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text_login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_login p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              className: \"form-label\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"username\",\n              placeholder: \"Your username\",\n              value: formLogin.username,\n              onChange: e => onInputChange(\"username\", e, formLogin, setFormLogin)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"form-label mt-3\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"password\",\n              placeholder: \"Your password\",\n              value: formLogin.password,\n              onChange: e => onInputChange(\"password\", e, formLogin, setFormLogin)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-login btn-danger mt-4\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: errorLoginError === null || errorLoginError === void 0 ? void 0 : errorLoginError.response.data.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pb-4\",\n        children: [\"Don\\u2019t have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          className: \"text_signUp\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"nawc4EHLDll2mmcj8V1CroqVilQ=\", false, function () {\n  return [useQueryClient, useNavigate, useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/escurtcheon/Documents/Code/JababekaReport/web/fe/src/pages/Login/Login.js"],"names":["React","useState","logo","onInputChange","useNavigate","useMutation","useQueryClient","loginUser","Login","queryClient","navigate","formLogin","setFormLogin","username","password","status","statusLoginUser","error","errorLoginError","mutate","handleLogin","mutationFn","onSuccess","result","Object","values","data","length","localStorage","setItem","JSON","stringify","invalidateQueries","handleSubmit","e","preventDefault","response","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../../assets/css/login.css\";\r\nimport \"../../assets/css/bootstrap.min.css\";\r\nimport logo from \"../../assets/logo/jababeka_report.png\";\r\nimport { onInputChange } from \"../shared/utils\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport { loginUser } from \"../../api/apiAuth\";\r\n\r\nconst Login = () => {\r\n  const queryClient = useQueryClient();\r\n  const navigate = useNavigate();\r\n  const [formLogin, setFormLogin] = useState({ username: \"\", password: \"\" });\r\n\r\n  const {\r\n    status: statusLoginUser,\r\n    error: errorLoginError,\r\n    mutate: handleLogin,\r\n  } = useMutation({\r\n    mutationFn: async () =>\r\n      await loginUser(formLogin.username, formLogin.password),\r\n    onSuccess: (result) => {\r\n      if (Object.values(result?.data.data).length > 0) {\r\n        localStorage.setItem(\"data\", JSON.stringify(result.data.data[0]));\r\n        navigate(\"/\");\r\n      }\r\n      return queryClient.invalidateQueries([\"comments\"]);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await handleLogin();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container_login\">\r\n      <div className=\"square_login\">\r\n        <div className=\"line_logo\">\r\n          <img className=\"img_logo_login mt-5 mb-3\" src={logo} />\r\n        </div>\r\n        <h2 className=\"text_login\">Login</h2>\r\n\r\n        <div className=\"form_login p-4\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <label htmlFor=\"username\" className=\"form-label\">\r\n                Username\r\n              </label>\r\n\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"username\"\r\n                placeholder=\"Your username\"\r\n                value={formLogin.username}\r\n                onChange={(e) =>\r\n                  onInputChange(\"username\", e, formLogin, setFormLogin)\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"form-label mt-3\">\r\n                Password\r\n              </label>\r\n\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                placeholder=\"Your password\"\r\n                value={formLogin.password}\r\n                onChange={(e) =>\r\n                  onInputChange(\"password\", e, formLogin, setFormLogin)\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <button className=\"btn btn-login btn-danger mt-4\">Log In</button>\r\n          </form>\r\n        </div>\r\n\r\n        <p className=\"text-danger\">{errorLoginError?.response.data.message}</p>\r\n\r\n        <p className=\"pb-4\">\r\n          Don’t have an account?\r\n          <a href=\"/register\" className=\"text_signUp\">\r\n            Sign Up\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}